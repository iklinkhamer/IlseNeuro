%% I.K. 1-6-24
function stats = histStatsMouseWrapper(mname, kwargs)
    arguments
        mname (1,1) string
        kwargs.event (1,1) string
        kwargs.modulating (1,1) logical
    end
    
    %import IkUtils.ifelse;
            
    [curationResults, sessionsMask] = loadSimpleCurationResultSanitized(mname); %loadComplexCurationResultSanitized(mname);
    
    ephysData = loadAnalyzedEphysDataForMouse(mname);
    modulationRanges = IkUtils.getParams().sspkRanges;
    p = IkUtils.getParams();
    i = 1;
    stats = [];
    for s = 1:length(ephysData)
        sessionDataNeurons = ephysData(s).neuron;
        sessionDataNeurons = sessionDataNeurons(curationResults(s).simple);
        for n = 1 : length(sessionDataNeurons) % IK note: fix!
            histStats = struct ...
                ( cs = computePsthStats ...
                ( sessionDataNeurons(n).RasterXY_cs_filtered ...
                , modulationRanges.cs ...
                , p.psthRanges.cs_full ...
                ) ... 
                , us = computePsthStats ...
                ( sessionDataNeurons(n).RasterXY_cs_filtered ... % IK change. Changed this to cs because we are only plotting the CS_aligned and the modulationranges for the us are also written as cs_aligned.
                , modulationRanges.us ...
                , p.psthRanges.cs_full ... 
                ) ...
                );
            histStats.cs.cs_facilitation = curationResults(s).modulation.cs_facilitation(n);
            histStats.cs.cs_suppression = curationResults(s).modulation.cs_suppression(n);
            histStats.us.us_facilitation = curationResults(s).modulation.us_facilitation(n);
            histStats.us.us_suppression = curationResults(s).modulation.us_suppression(n);
            stats.cs(i) = histStats.cs;
            stats.us(i) = histStats.us;
            i = i + 1;
        end
    end

    return   
    
end



%  sessionWrapper = @(eDat, curation) ...
%         histStatsSessionWrapper ...
%             ( eDat ...
%             , curation ...
%             , event = kwargs.event ...
%             , modulating = kwargs.modulating ...
%             , mname = mname ...
%             );
%     allIdcs.Shank2MUT = 1:2;
%     allIdcs.Shank2WT = [];
%     idcs = [allIdcs.Shank2MUT allIdcs.Shank2WT];
%     stats = arrayfun ...
%         ( sessionWrapper ...
%         , ephysData(idcs) ...
%         , curationResults(idcs) ...
%         );

%%

% 
%     allIdcs = [1,2];%splitSessionsByType(mname);
% 
%     idcs = [1,2]; %[allIdcs.delta allIdcs.uniform];
% 
%     if max(idcs) > numel(curationResults)
%         warning ...
%             ( "No curation results were found for %s after session %d\n" ...
%             , mname ...
%             , numel(curationResults) ...
%             )
%         typeStr = sprintf ...
%             ( "- type: %s" ...
%             , getMouseType(mname) ...
%             );
%         totalStr = sprintf ...
%             ( "- total number of sessions: %d" ...
%             , max(idcs) ...
%             );
% %         deltaStr = sprintf ...
% %             ( "- delta sessions: %s" ...
% %             , ifelse ...
% %                 ( isempty(allIdcs.delta) ...
% %                 , "[]" ...
% %                 , sprintf("%d-%d", min(allIdcs.delta), max(allIdcs.delta)) ...
% %                 ) ...
% %             );
% %         uniformStr = sprintf ...
% %             ( "- uniform sessions: %s" ...
% %             , ifelse ...
% %                 ( isempty(allIdcs.uniform) ...
% %                 , "[]" ...
% %                 , sprintf("%d-%d\n", min(allIdcs.uniform), max(allIdcs.uniform)) ... 
% %                 ) ...
% %             );
%         
% %         IkUtils.printIndented ...
% %             ( strjoin([typeStr, totalStr, deltaStr, uniformStr], newline) ...
% %             )
%         
% %         partialCurationOk = IkUtils.do_prompt_yes_or_no ...
% %             ( "Continue with only the currently curated sessions?" ...
% %             );
%         
% %         if partialCurationOk
% %             idcs = IkUtils.filter(@(x) x<= numel(curationResults), idcs);
% %         end
%         
%     end