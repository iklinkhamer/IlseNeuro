function files = getResultsFiles(mname)
    arguments
        mname(1,1) string
    end
    
    curationTypes = struct ...
        ( complex = "Complex" ...
        , simple = "Simple" ...
        );
    
    files = structfun ...
        ( @(type) getResultsSingleType(mname, type) ...
        , curationTypes ...
        , uniformoutput = false ...
        );
    
end

function files = getResultsSingleType(mname, curationType)
    
    import IkUtils.io.listTimestampedFiles;

    [curationFile, curationDate] = listTimestampedFiles ...
        ( sprintf ...
            ( "%sChannelMasks_%s" ...
            , lower(curationType) ...
            , mname ...
            ) ...
        , folder = cspkResultsFolder() ...
        , onlyLates = true ...
        );
    
    [modulationFile, modulationDate] = listTimestampedFiles ...
        ( sprintf ...
            ( "%sChannelModulationMasks_%s" ...
            , lower(curationType) ...
            , mname ...
            ) ...
        , folder = cspkResultsFolder() ...
        , onlyLates = true ...
        );
    
    [exemplaryFile, exemplaryDate] = listTimestampedFiles ...
        ( sprintf ...
            ( "exemplary%sChannelMasks_%s" ...
            , curationType ...
            , mname ...
            ) ...
        , folder = cspkResultsFolder() ...
        , onlyLates = true ...
        );
    
    files = struct ...
        ( channelCuration = struct ...
            ( name = curationFile ...
            , date = curationDate ...
            ) ...
        , modulation = struct ...
            ( name = modulationFile ...
            , date = modulationDate ...
            ) ...
        , exemplary = struct ...
            ( name = exemplaryFile ...
            , date = exemplaryDate ...
            ) ...
        );
            
            

%     filePattern = sprintf ...
%         ( "curationResults%s_%s_*.mat" ...
%         , curationType ...
%         , mname ...
%         );

%     files_ = dir(fullfile(resultsFolder, filePattern));

%     fileNames = arrayfun ...
%         ( @(file) string(file.name) ... % convert char array to string
%         , files_ ...
%         );
%     [~, sortIdcs] = sort(fileNames, 'descend');
%     files = files_(sortIdcs);
end