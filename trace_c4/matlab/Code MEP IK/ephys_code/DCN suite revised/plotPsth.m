%% I.K. 6-6-24
% Called by function: viewChannelSpikes
function plotPsth(ax, psthBins, psthCountsPerCondition, range, eventTimes)
    arguments
        ax
        psthBins(1,:) double {isnumeric}
        psthCountsPerCondition(:,:) double {isnumeric}
        range
        eventTimes(1,:) double {isnumeric} = [];
    end

    xlabel(ax, "time [s]")
    ylabel(ax, "PSTH")
  
    rangeMask = psthBins >= range.min & psthBins < range.max;

    mx = max(max(psthCountsPerCondition(:,rangeMask)));
    mn = min(min(psthCountsPerCondition(:,rangeMask)));
    
    ax.YLim(2) = max(round(mx/10)*10 + 10, 120);
    ax.YLim(1) = min(round(mn/10)*10 - 10, 20);   


nConditions = size(psthCountsPerCondition, 1);

    arrayfun ...
        ( @(c) ...
            plot ...
                ( ax ...
                , psthBins(rangeMask)... %psthBins(1:end-1) ... % IK change. TODO: check why psthBins size is one bigger than counts.
                , psthCountsPerCondition(c, rangeMask) ... %smoothedData(c,rangeMask(1:end-1)) ... %psthCountsPerCondition(c, rangeMask) ...
                , Color = getColors().ColDist(c,:) ...
                ) ...
        , 1:nConditions ...
        );
    
    if sum(eventTimes) > 100
        eventTimes = eventTimes/1000;
    end
    arrayfun ...
        ( @(eventTime) ...
            plot ...
                ( ax ...
                , [eventTime eventTime], [min(mn, ax.YLim(1)) max(mx, ax.YLim(2))] ...
                , '--' ...
                , color = [.5 .5 .5] ...
                ) ...
        , eventTimes ...
        );
 p = IkUtils.getParams();

 if nConditions == 2
     legend...
         ( ax...
         , p.condition_types(1)...
         , p.condition_types(2)...
         , "Location"...
         , "northwest"...
         )...
         ;
 elseif nConditions == 3
     legend...
         ( ax...
         , p.condition_types(1)...
         , p.condition_types(2)...
         , p.condition_types(3)...
         , "Location"...
         , "northwest"...
         )...
         ;
 end
     
    xlim(ax, [range.min, range.max]);

end