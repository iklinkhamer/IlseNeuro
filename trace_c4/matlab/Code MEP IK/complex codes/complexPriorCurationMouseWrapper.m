% Curate complex channels of all sessions for the selected mouse

% Copyright 2023 NarainLab
% Erasmus Medical Center, Rotterdam, The Netherlands
% v2023-01-05
% 

% complexCurationMouseWrapper : SubjectID -> [CurationResult]
function masks = complexPriorCurationMouseWrapper(mname)
        
    if nargin < 1
        
        fprintf("\n-------------------------------------")
        fprintf("\nWhich mouse would you like to curate?")
        fprintf("\n-------------------------------------\n")
        
        mouseNames = arrayfun ...
            ( @(mouse) string(mouse.name) ...
            , defaultMice() ...
            );
        
        mname = IkUtils.do_prompt_select_option(mouseNames);
    end
    
    mname
    
    spikeSortedEphysData = loadAnalyzedEphysDataForMouse(mname);
    
    sessionIdcs = splitSessionsByType(mname);
    
    allSessionIdcs = [sessionIdcs.delta sessionIdcs.uniform];
    
    nSessions = numel(allSessionIdcs);
    
    candidateMasks = computeChannelCandidates(spikeSortedEphysData);

    simpleCuration = loadSimpleCurationResultSanitized(mname);
    
    if numel(simpleCuration) ~= nSessions
        if numel(simpleCuration) > 0
            warning ...
                ( "No. sessions in simple curation result does not match the " ...
                + "no. sessions found for %s:\n" ...
                + "\tsimple curation: %d\n" ...
                + "\tcurrent: %d\n" ...
                , mname ...
                , numel(simpleCuration) ...
                , nSessions ...
                )
            keyboard
        else
            fprintf("\nNo simple spike curation results found for %s.\n", mname)
        end
    end
    
    getSimpleCuration = IkUtils.mkSafeArrayWrapper(simpleCuration, default = struct( simple = []));
    
    axs = struct ...
        ( neuronAxs = IkUtils.initPlots([2 3], condensed = true) ...
        , contaminAx = IkUtils.initPlots([1 1], condensed = true) ...
        , crossCorrAx = IkUtils.initPlots([1 1], condensed = true) ...
        );
    
    prevCuration = loadComplexCurationResultRaw(mname, onlyLatest = true);
    
    getPrevCur = IkUtils.mkSafeArrayWrapper(prevCuration);
    
    if numel(prevCuration) ~= nSessions
        if numel(prevCuration) > 0
            warning ...
                ( "No. sessions in previous curation result does not match the " ...
                + "no. sessions found for %s:\n" ...
                + "\tprevious: %d\n" ...
                + "\tcurrent: %d\n" ...
                , mname ...
                , numel(prevCuration) ...
                , nSessions ...
                )
            prevCuration = @(idx) getPrevCur(idx);
            keyboard
        else
            fprintf("\nNo previous curation results found for %s.\n", mname)
            prevCuration = @(~) [];
        end
    end
        
    masks = arrayfun ...
        ( @(sessionIdx) ...
            complexPriorCurationSessionWrapper ...
            ( axs ...
            , mname ...
            , sessionIdx ...
            , spikeSortedEphysData(sessionIdx)...
            , candidateMasks(sessionIdx).complexMask ...
            , getSimpleCuration(sessionIdx).simple ...
            , getPrevCur(sessionIdx) ...
            ) ...
        , allSessionIdcs ...
        );
    
    saveComplexCurationResult(mname, masks);%, struct(type = getMouseType(mname)) )
    
end
